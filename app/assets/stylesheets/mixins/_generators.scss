

//  ================================
//  ## Mixins --> Generators
//  ================================


@mixin variant-generator($variants: $colors, $prop: 'background') {
  @each $variant in map-keys($variants) {
    $color: map-get($variants, $variant);

    &--#{$variant} {
      #{$prop}: $color;
    }
  }
};

@mixin text-generator($text: $text-hieracy) {
  @each $text-variant, $text-sizes in $text {
    $variant: $text-variant;

    $sm: map-get(map-get($text, $variant), 'sm');
    $lg: map-get(map-get($text, $variant), 'lg');

    &--#{$variant} {
      font-size: $sm;

      @include respond-to('small') {
        font-size: $lg;
      }
    }
  }
}


@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: #{map-get($breakpoints, $breakpoint)}) {
      @content;
    }
  }

  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}


@mixin spacer($space) {
  margin: $space;

  &-t { margin-top: $space; }
  &-r { margin-right: $space; }
  &-b { margin-bottom: $space; }
  &-l { margin-left: $space; }
  &-x { margin-left: $space; margin-right: $space; }
  &-y { margin-top: $space; margin-bottom: $space; }
}
